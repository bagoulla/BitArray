name: Build & Test BitArray

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest]
    steps:
    - name: Clone repository
      uses: actions/checkout@v2
      
    - name: Build BitArray
      uses: lukka/run-cmake@v2
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeListsTxtPath: '${{github.workspace}}/CMakeLists.txt'
        useVcpkgToolchainFile: false
        buildDirectory: '${{runner.workspace}}/build'
        cmakeAppendedArgs: '-DBUILD_TESTS=on'

    - name: Run tests
      working-directory: '${{runner.workspace}}/build'
      run: ctest --output-on-failure

  benchmark:
    runs-on: ubuntu-latest
    steps:
    - name: Clone repository
      uses: actions/checkout@v2
      
    - name: Build BitArray
      uses: lukka/run-cmake@v2
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeListsTxtPath: '${{github.workspace}}/CMakeLists.txt'
        useVcpkgToolchainFile: false
        buildDirectory: '${{runner.workspace}}/build'
        cmakeAppendedArgs: '-DBUILD_BENCHMARKS=on'

    - name: Run benchmarks
      working-directory: '${{runner.workspace}}/build'
      run: make bench

  codecov:
    runs-on: ubuntu-latest
    steps:
    - name: Clone repository
      uses: actions/checkout@v2

    - name: Install lcov
      run: sudo apt-get update -y && sudo apt-get install -y lcov

    - name: Build BitArray
      uses: lukka/run-cmake@v2
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeListsTxtPath: '${{github.workspace}}/CMakeLists.txt'
        useVcpkgToolchainFile: false
        buildDirectory: '${{runner.workspace}}/build'
        cmakeAppendedArgs: '-DBUILD_TESTS=on -DENABLE_COVERAGE=on -DCMAKE_BUILD_TYPE=Debug'

    - name: Run code coverage
      working-directory: '${{runner.workspace}}/build'
      run: make && make coverage

    - uses: codecov/codecov-action@v1
      with:
        file: '${{runner.workspace}}/build/coverage.info'
